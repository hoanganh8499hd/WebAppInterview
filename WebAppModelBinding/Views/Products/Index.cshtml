@model ProductListViewModel
@{
    ViewData["Title"] = "Products";
}
<div class="container-fluid mt-4">
    <h2 class="text-center mb-4">🛒 Product List</h2>
    <!-- Filter Section -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">🔍 Filter and Sort Products</h5>
        </div>
        <div class="card-body">
            <form method="get" asp-action="Index" asp-controller="Products" class="row g-3 align-items-end">
                <div class="col-12 col-md-6 col-lg-3">
                    <label asp-for="SearchTerm" class="form-label">Search by Name</label>
                    <input asp-for="SearchTerm" class="form-control" placeholder="Type a product name..." />
                </div>
                <div class="col-12 col-md-6 col-lg-2">
                    <label asp-for="Category" class="form-label">Category</label>
                    <select asp-for="Category" asp-items="Model.Categories" class="form-control">
                        <option value="">All Categories</option>
                    </select>
                </div>
                <div class="col-12 col-md-6 col-lg-2">
                    <label asp-for="SortBy" class="form-label">Sort By</label>
                    <select asp-for="SortBy" asp-items="Model.SortOptions" class="form-control">
                        <option value="">Choose option</option>
                    </select>
                </div>
                <div class="col-12 col-md-6 col-lg-2">
                    <div class="form-check mt-4">
                        <input asp-for="SortAscending" class="form-check-input" />
                        <label asp-for="SortAscending" class="form-check-label">Ascending </label>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-2">
                    <label asp-for="PageSize" class="form-label">Items per Page</label>
                    <select asp-for="PageSize" asp-items="Model.PageSizeOptions" class="form-control" onchange="this.form.submit();"></select>
                </div>
                <div class="col-12 col-md-6 col-lg-1">
                    <button type="submit" class="btn btn-success w-100">Apply 🎯</button>
                </div>
            </form>
        </div>
    </div>
    <!-- Product Data Section -->
    <div class="card shadow-sm">
        <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">📊 Product Data</h5>
            <span class="badge bg-light text-dark">Total: @Model.Products.Count() 📝</span>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="thead-dark">
                        <tr>
                            <th class="text-center">Name 🏷️</th>
                            <th class="text-center">Category 🗂️</th>
                            <th class="text-center">Price 💵</th>
                            <th class="text-center">Date Added 📅</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Check if there are any products to display -->
                        @if (Model.Products.Any())
                        {
                            <!-- Loop through each product in the model's product list -->
                            @foreach (var product in Model.Products)
                            {
                                <tr>
                                    <td class="text-center">@product.Name</td>
                                    <td class="text-center">@product.Category</td>
                                    <td class="text-center">@product.Price.ToString("C")</td>
                                    <td class="text-center">@product.DateAdded.ToShortDateString()</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center">😞 No products found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Pagination -->
            <nav aria-label="Product List Pagination" class="mt-3">
                <ul class="pagination justify-content-center mb-0">
                    <!-- Disable the First and Previous buttons if on the first page -->
                    @if (Model.PageNumber == 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">First ⏮️</span>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">Previous ⬅️</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <!-- Link to the first page -->
                            <a class="page-link" asp-action="Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-Category="@Model.Category" asp-route-SortBy="@Model.SortBy" asp-route-SortAscending="@Model.SortAscending" asp-route-PageSize="@Model.PageSize" asp-route-PageNumber="1">First ⏮️</a>
                        </li>
                        <li class="page-item">
                            <!-- Link to the previous page -->
                            <a class="page-link" asp-action="Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-Category="@Model.Category" asp-route-SortBy="@Model.SortBy" asp-route-SortAscending="@Model.SortAscending" asp-route-PageSize="@Model.PageSize" asp-route-PageNumber="@(Model.PageNumber - 1)">Previous ⬅️</a>
                        </li>
                    }
                    <li class="page-item active">
                        <!-- Display the current page number -->
                        <span class="page-link">@Model.PageNumber</span>
                    </li>
                    <!-- Disable the Next and Last buttons if on the last page -->
                    @if (Model.PageNumber == Model.TotalPages)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next ➡️</span>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">Last ⏭️</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <!-- Link to the next page -->
                            <a class="page-link" asp-action="Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-Category="@Model.Category" asp-route-SortBy="@Model.SortBy" asp-route-SortAscending="@Model.SortAscending" asp-route-PageSize="@Model.PageSize" asp-route-PageNumber="@(Model.PageNumber + 1)">Next ➡️</a>
                        </li>
                        <li class="page-item">
                            <!-- Link to the last page -->
                            <a class="page-link" asp-action="Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-Category="@Model.Category" asp-route-SortBy="@Model.SortBy" asp-route-SortAscending="@Model.SortAscending" asp-route-PageSize="@Model.PageSize" asp-route-PageNumber="@Model.TotalPages">Last ⏭️</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
@functions {
    // Function to generate route values for pagination links, preserving the current filter and sort options
    private object GetRouteValuesForPage(int pageNumber)
    {
        return new
        {
            SearchTerm = Model.SearchTerm, // Preserve the search term
            Category = Model.Category, // Preserve the selected category
            SortBy = Model.SortBy, // Preserve the selected sort option
            SortAscending = Model.SortAscending, // Preserve the sort order
            PageSize = Model.PageSize, // Preserve the selected page size
            PageNumber = pageNumber // Set the page number to the specified value
        };
    }
}